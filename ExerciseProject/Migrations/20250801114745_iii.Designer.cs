// <auto-generated />
using System;
using ExerciseProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExerciseProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250801114745_iii")]
    partial class iii
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExerciseProject.Model.ExerciseName", b =>
                {
                    b.Property<int>("ExerciseNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseNameId"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<long>("ExerciseCode")
                        .HasColumnType("bigint");

                    b.Property<string>("ExerciseNamee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExerciseTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("ExerciseNameId");

                    b.HasIndex("ExerciseTypeId");

                    b.ToTable("ExerciseNames");
                });

            modelBuilder.Entity("ExerciseProject.Model.ExerciseType", b =>
                {
                    b.Property<int>("ExerciseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseTypeId"));

                    b.Property<string>("ExerciseTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseTypeId");

                    b.ToTable("ExerciseTypes");
                });

            modelBuilder.Entity("ExerciseProject.Model.SelectedExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExerciseNameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseNameId");

                    b.ToTable("SelectedExercises");
                });

            modelBuilder.Entity("ExerciseProject.Model.ExerciseName", b =>
                {
                    b.HasOne("ExerciseProject.Model.ExerciseType", "ExerciseType")
                        .WithMany("Exercises")
                        .HasForeignKey("ExerciseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseType");
                });

            modelBuilder.Entity("ExerciseProject.Model.SelectedExercise", b =>
                {
                    b.HasOne("ExerciseProject.Model.ExerciseName", "ExerciseName")
                        .WithMany()
                        .HasForeignKey("ExerciseNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseName");
                });

            modelBuilder.Entity("ExerciseProject.Model.ExerciseType", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
